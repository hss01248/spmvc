<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hss01248.batis.mapper.OrdersMapperCustom">

	<!--开启二级缓存  ,注意pojo需要实现序列化-->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache">
		<property name="timeToIdleSeconds" value="12000"/>
		<property name="timeToLiveSeconds" value="3600"/>
		<!-- 同ehcache参数maxElementsInMemory -->
		<property name="maxEntriesLocalHeap" value="1000"/>
		<!-- 同ehcache参数maxElementsOnDisk -->
		<property name="maxEntriesLocalDisk" value="10000000"/>
		<property name="memoryStoreEvictionPolicy" value="LRU"/>
	</cache>

<!--resulttype实现一对一-->
    <select id="findOrderUserList" resultType="OrderCustom">
         SELECT
		  orders.*,
		  user.username,
		  user.sex
		FROM
		  orders,
		  USER
		WHERE orders.user_id = user.id
    </select>


<!--resulttmap实现一对一:查询用户和订单-->
	<resultMap id="OrderUserMap" type="Orders">
		<id column="id" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="number" property="number"/>
		<result column="createtime" property="createtime"/>
		<result column="note" property="note"/>
		<!--关联信息的映射-->
		<association property="user" javaType="User">
			<result column="user_id" property="id"/>
			<result column="username" property="username"/>
			<result  column="sex" property="sex"/>
		</association>
	</resultMap>

	<select id="findOrderUserListMap" resultMap="OrderUserMap">
		SELECT
		orders.*,
		user.username,
		user.sex
		FROM
		orders,
		USER
		WHERE orders.user_id = user.id
	</select>

<!--一对多:查询订单和订单详情-->
	<resultMap id="orderAndDetials" type="Orders" extends="OrderUserMap">
		<!--订单和user使用继承-->
		<!--订单明细-->
		<collection property="orderdetails" ofType="Orderdetail">
			<id column="orderdetail_id" property="id"/>
			<result column="items_num" property="itemsNum"/>
			<result column="items_id" property="itemsId"/>
		</collection>
	</resultMap>

	<select id="findOrderAndDetails" resultMap="orderAndDetials">
		SELECT
		  orders.*,
		  user.username,
		  user.sex ,
		  orderdetail.id orderdetail_id,
		  orderdetail.items_num,
		  orderdetail.items_id
		FROM
		  orders,
		  USER,
		  orderdetail
		WHERE orders.user_id = user.id  AND orders.id = orderdetail.orders_id
	</select>

<!--一对多: 查询所有用户信息，关联查询订单及订单明细信息及商品信息，订单明细信息中关联查询商品信息-->
	<resultMap id="usersAndOrders" type="User">
		<!--用户信息映射-->
		<result column="user_id" property="id"/>
		<result column="username" property="username"/>
		<result  column="sex" property="sex"/>
		<!--user里的orderlist-->
		<collection property="orderList" ofType="Orders">
			<id column="id" property="id"/>
			<result column="number" property="number"/>
			<result column="createtime" property="createtime"/>
			<result column="note" property="note"/>
			<!--order里的orderdetails-->
			<collection property="orderdetails" ofType="Orderdetail">
				<id column="orderdetail_id" property="id"/>
				<result column="items_num" property="itemsNum"/>
				<result column="items_id" property="itemsId"/>
				<!--商品信息-->
				<association property="items" javaType="Items">
					<id column="items_id" property="id"/>
					<result column="items_name" property="name"/>
					<result column="items_detail" property="detail"/>
				</association>
			</collection>



		</collection>

	</resultMap>
	<select id="findUsersAndOrders" resultMap="usersAndOrders" >
		SELECT
		  orders.*,
		  user.username,
		  user.sex ,
		  orderdetail.id orderdetail_id,
		  orderdetail.items_num,
		  orderdetail.items_id,
		  items.name items_name,
		  items.detail items_detail
		FROM
		  orders,
		  USER,
		  orderdetail,
		  items
		WHERE orders.user_id = user.id  AND orders.id = orderdetail.orders_id AND items.id = orderdetail.items_id
	</select>


	<!--一对一 延迟加载-->
	<!-- 一对一查询延迟加载 的配置 -->
	<resultMap type="orders" id="orderCustomLazyLoading">
		<!-- 完成了订单信息的映射配置 -->
		<!-- id：订单关联用户查询的唯 一 标识 -->
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="number" property="number" />
		<result column="createtime" property="createtime" />
		<result column="note" property="note" />
		<!-- 配置用户信息的延迟加载 select：延迟加载执行的sql所在的statement的id，如果不在同一个namespace需要加namespace
			sql：根据用户id查询用户信息 column：关联查询的列 property:将关联查询的用户信息设置到Orders的哪个属性 -->
		<association property="user"
					 select="com.hss01248.batis.mapper.UserMapper.findById" column="user_id"/>
	</resultMap>

	<select id="findOrderUserListLazyLoading" resultMap="orderCustomLazyLoading">
		SELECT
		orders.*
		FROM
		orders
	</select>




</mapper>